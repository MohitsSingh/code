function [I,U,detections]=getRegionImportance(conf, curID,w ,net_deep,cutoffs)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
I = getImage(conf,curID);


% featsPath = j2m('~/storage/s40_kriz_fc6_block_5_2',curID);
layers=16;
searchRegion = true
if searchRegion
    
    f = extractDNNFeats(I,net_deep,layers,false);
    I = getImage(conf,curID);
%     I = flip_image(I);
    I = makeImageSquare(I);

    w = w(1:end-1)';
    
    %[U,I] = doMaskSearch_deep(I,net_deep,layers,w,cutoffs);
    
    [U] = doMaskSearch(im2double(I),net_deep,layers,w);
    detections = 0;
    
    U = [im2double(I) (sc(cat(3,U,im2double(I)),'prob_jet'))];

    % start with whole bounding box
    
    return
end

if 0 && exist(featsPath,'file')
    L = load(featsPath);
    detections = L.rects;
    detections(:,5) = -inf;
    newScores = w(1:end-1)'*L.feats;
    orig_score = w(1:end-1)'*L.feats_global;
    detections(:,5) = exp(-newScores);
else
    %     nWindows= 9;layers=16;
    %     wndSize = floor(size(I,1)/sqrt(nWindows))
    %     j = round(max(1,wndSize/2));
    %     dx = 1:j:size(I,2)-wndSize+1;
    %     dy = 1:j:size(I,1)-wndSize+1;
    %     [yy,xx] = meshgrid(dy,dx);
    %     nn = length(xx(:));
    %     detections = zeros(nn,5);
    %     detections(:,1:4) = [xx(:),yy(:),xx(:)+wndSize,yy(:)+wndSize];
    %     detections(:,5) = -inf;
    %     z = cell(nn,1);
    detections = makeTiles(I,9,2);
    detections(:,5) = -inf;
    nn = size(detections,1);
    for iRect = 1:nn
        iRect/nn
        r = I;
        curRect = detections(iRect,:);
        r(curRect(2):curRect(4),curRect(1):curRect(3),:) = .5;
        z{iRect} = r;
    end
    f = extractDNNFeats(z,net_deep,layers,false);
    newScores = w(1:end-1)'*f.x;
    detections(:,5) = exp(-newScores);
end
% detections(:,3:4) = detections(:,3:4)-1;
[map,counts] = computeHeatMap(I,detections,'max');
%         m = showSorted(z,-newScores);
U = [I (sc(cat(3,map,I),'prob_jet'))];








% U = imResample(U,256/size(U,1),'bilinear');






